# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - You should follow this convention unless you have a good reason
#      not to.
#
#    - But your *program* should still work with grammars that don't 
#      follow this convention.  It should not pay any attention to
#      upper/lower case.  From your program's point of view, 
#      if there is at least one rule for rewriting a symbol, then
#      that symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.
1 	S1 ROOT
1	ROOT	S .
1 ROOT  SS .
0.5	ROOT	S !
1	ROOT	Q ?

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

# Base sentence expands
1	S	NP VP
1	S 	DO NOT VP


# question expands
1	Q 	DO SS
1	Q 	DOES S
1	Q 	WP Q[nobj]
1	Q 	WRB Q[nobj]
#1	Q 	WRB DOES NP have a king

# Plural sentence
1	SS 	NPS VPS

# Sentences where the object exists elsewhere
1	S[nobj]	NP VP[nobj]
1	Q[nobj]	DOES NP VP[pres-nobj]


# NP expands
1	NP	Noun
3	NP	Det Noun
1	NP	NP PP
0.1	NP	NP Conj NP
0.1	NP	Sel S
3 Noun  Adj Noun
1	Noun 	PRP
1	Noun 	Proper
1 Noun  NNP
1	NP	VBG	TO 	NOUNS
1	NOUNS NNS
1	NOUNS NNP
1	NOUNS NNPS
1	NP NNP

# NPS
1	NPS NNS
1 NPS AdjS NNS

# VPS
1	VPS VBP
1 VPS VBP PP



# VP expands
1	VP	VerbT NP
1	VP	VerbT JJ
1	VP VBP NP
1	VP VB
1	VP MD VB VBN
# 0.05	VP	VP PP
# 1	VP	Verb'
# 0.1 VP  VP Conj VP
# 1 Verb  Verb Conj Verb



# no object variants (for phrases containing question-objects)
1	VP[pres-nobj]	VBP
1	VP[pres-nobj]	VB NP
1	VP[pres-nobj]	VBP NP VBP


# PP expands
1	PP	Prep NP




# present tense variants
1	S[pres]	NP	VP[pres]
1	VP[pres]	V[pres] NP
0.1	VP[pres]	VP[pres] PP
1	VP[pres]	V'[pres]
0.1	VP[pres]	VP[pres] Conj VP[pres]
1	V[pres]		V[pres] Conj V[pres]

# no object variants (for phrases containing question-objects)
1	VP[pres-nobj]	V[pres]
1	VP[pres-nobj]	VP[pres] PP[nobj]
1	VP[pres-nobj]	V[pres] NP[nobj]
0.1	VP[pres-nobj]	VP[pres-nobj] PP
0.1	VP[pres-nobj]	VP[pres-nobj] Conj VP[pres-nobj]
1	PP[nobj]	Prep
1	PP[nobj]	Prep PP
1	NP[nobj]	Sel S[nobj]
1	S[nobj]		NP VP[nobj]
1	VP[nobj]	Verb
0.1	VP[nobj]	VP[nobj] PP
0.1	VP[nobj]	VP[nobj] Conj VP[nobj]

# Adjectives
1 Adj CD
1 Adj JJ
1 AdjS CDS
1 AdjS  JJ

# # Vocabulary.  Your program can see that "ate" is a terminal
# # symbol because there exists no rule for rewriting it.
# # Any symbol that can rewrite as a terminal (or a string of 
# # terminals, like "chief of staff") is called a "preterminal."  Notice 
# # that a preterminal is a special kind of nonterminal.

# 1	Verb	ate
# 1	Verb	wanted
# 1	Verb	kissed
# 1	Verb	understood
# 1	Verb	pickled
# 1	Verb 	perplexed
# 1	Verb 	thought

# # intransitive verbs don't take an object, but might take a PP

# 1	Verb'	kissed
# 1	Verb'	sighed
# 1	Verb'	worked

# # present tense verb versions

# 1	V[pres] 	eat
# 1	V[pres] 	want
# 1	V[pres] 	kiss
# 1	V[pres] 	understand
# 1	V[pres] 	pickle
# 1	V[pres] 	perplex
# 1	V[pres]		think

# 1	V'[pres]	kiss
# 1	V'[pres]	sigh
# 1	V'[pres]	work

# 1	Det	the
# 1	Det	a
# 1	Det	every
# 0.1	Det that

# 1	Noun	president
# 0.5	Noun	sandwich
# 0.1	Noun	pickle
# 1	Noun	chief of staff
# 0.5	Noun	floor
# 0.5	Noun 	desk
# 1	Noun	Sally
# 1	Noun 	proposal

# 0.5	Adj	fine
# 1	Adj	delicious
# 1	Adj	perplexed
# 0.1	Adj	pickled
# 1	Adj very


# 1	Prep	with
# 1	Prep	on
# 1	Prep	under
# 1	Prep	in

# 1	Conj 	and

# # selectors

# 1	Sel		that

# # interrogatives

# 1	Int 	did
# 1	Int 	will

# # Wh-words

# 1	Wh 	when
# 1	Wh 	where

# # Wh-words which are themselves the object

# 1	Wh[obj]	who
# 1	Wh[obj]	what
